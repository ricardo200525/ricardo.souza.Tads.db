
DROP TABLE CLIENTES PURGE;

CREATE TABLE CLIENTES (
  id    NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  nome  VARCHAR2(100) NOT NULL,
  email VARCHAR2(120) UNIQUE
);


INSERT INTO CLIENTES (nome, email) VALUES ('Ricardo', 'ricardo@gmail.com');
INSERT INTO CLIENTES (nome, email) VALUES ('Ney', 'ney@gmail.com');
INSERT INTO CLIENTES (nome, email) VALUES ('Carlos', 'carlos@gmail.com');

DROP TABLE PRODUTOS PURGE;

CREATE TABLE PRODUTOS (
  id     NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  nome   VARCHAR2(100) NOT NULL,
  preco  NUMBER(10,2)  NOT NULL CHECK (preco >= 0),
  tipo   VARCHAR2(50) NOT NULL
);


INSERT ALL
  INTO PRODUTOS (nome, preco, tipo) VALUES ('Notebook X', 3000, 'Notebook')
  INTO PRODUTOS (nome, preco, tipo) VALUES ('Notebook Y', 3500, 'Notebook')
  INTO PRODUTOS (nome, preco, tipo) VALUES ('Celular Z', 2000, 'Celular')
SELECT 1 FROM dual;

UPDATE PRODUTOS
SET preco = preco * 1.10
WHERE tipo = 'Notebook';

DROP TABLE PEDIDOS PURGE;

CREATE TABLE PEDIDOS (
  id         NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  cliente_id NUMBER NOT NULL,
  produto_id NUMBER NOT NULL,
  status     VARCHAR2(20) NOT NULL CHECK (status IN ('ABERTO','FINALIZADO','CANCELADO'))
);


INSERT ALL
  INTO PEDIDOS (cliente_id, produto_id, status) VALUES (1, 1, 'ABERTO')
  INTO PEDIDOS (cliente_id, produto_id, status) VALUES (2, 2, 'CANCELADO')
  INTO PEDIDOS (cliente_id, produto_id, status) VALUES (3, 3, 'FINALIZADO')
  INTO PEDIDOS (cliente_id, produto_id, status) VALUES (1, 2, 'CANCELADO')
SELECT 1 FROM dual;


DELETE FROM PEDIDOS
WHERE status = 'CANCELADO';

DROP TABLE CLIENTES_STG PURGE;

CREATE TABLE CLIENTES_STG (
  nome  VARCHAR2(100) NOT NULL,
  email VARCHAR2(120) NOT NULL
);


INSERT ALL
  INTO CLIENTES_STG (nome, email) VALUES ('Ana Atualizada', 'ana@gmail.com')
  INTO CLIENTES_STG (nome, email) VALUES ('Daniela Nova', 'daniela@gmail.com') 
SELECT 1 FROM dual;


MERGE INTO CLIENTES c
USING CLIENTES_STG s
ON (c.email = s.email)
WHEN MATCHED THEN
  UPDATE SET c.nome = s.nome
WHEN NOT MATCHED THEN
  INSERT (nome, email) VALUES (s.nome, s.email);